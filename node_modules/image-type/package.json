{
  "name": "image-type",
  "version": "1.1.0",
  "description": "Detect the image type of a Buffer/Uint8Array",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/image-type"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "bin": {
    "image-type": "cli.js"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js",
    "cli.js"
  ],
  "keywords": [
    "image",
    "img",
    "pic",
    "picture",
    "photo",
    "type",
    "detect",
    "check",
    "is",
    "exif",
    "binary",
    "buffer",
    "uint8array",
    "cli",
    "bin",
    "png",
    "jpg",
    "jpeg",
    "gif",
    "webp",
    "tif",
    "bmp",
    "jxr",
    "psd",
    "mime"
  ],
  "dependencies": {
    "is-bmp": "^1.0.0",
    "is-gif": "^1.0.0",
    "is-jpg": "^1.0.0",
    "is-jxr": "^1.0.0",
    "is-png": "^1.0.0",
    "is-psd": "^1.0.0",
    "is-tif": "^1.0.0",
    "is-webp": "^1.0.0",
    "meow": "^2.0.0"
  },
  "devDependencies": {
    "mocha": "*",
    "read-chunk": "^1.0.0"
  },
  "readme": "# image-type [![Build Status](https://travis-ci.org/sindresorhus/image-type.svg?branch=master)](https://travis-ci.org/sindresorhus/image-type)\n\n> Detect the image type of a Buffer/Uint8Array\n\nSee the [file-type](https://github.com/sindresorhus/file-type) module for more file types.\n\n\n## Install\n\n```sh\n$ npm install --save image-type\n```\n\n\n## Usage\n\n##### Node.js\n\n```js\nvar readChunk = require('read-chunk'); // npm install read-chunk\nvar imageType = require('image-type');\nvar buffer = readChunk.sync('unicorn.png', 0, 12);\n\nimageType(buffer);\n//=> png\n```\n\nor from a remote location:\n\n```js\nvar http = require('http');\nvar imageType = require('image-type');\nvar url = 'http://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif';\n\nhttp.get(url, function (res) {\n\tres.once('data', function (chunk) {\n\t\tres.destroy();\n\t\tconsole.log(imageType(chunk));\n\t\t//=> gif\n\t});\n});\n```\n\n##### Browser\n\n```js\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', 'unicorn.png');\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = function () {\n\timageType(new Uint8Array(this.response));\n\t//=> png\n};\n\nxhr.send();\n```\n\n\n## API\n\n### imageType(buffer)\n\nReturns: [`png`](https://github.com/sindresorhus/is-png), [`jpg`](https://github.com/sindresorhus/is-jpg), [`gif`](https://github.com/sindresorhus/is-gif), [`webp`](https://github.com/sindresorhus/is-webp), [`tif`](https://github.com/sindresorhus/is-tif), [`bmp`](https://github.com/sindresorhus/is-bmp), [`jxr`](https://github.com/sindresorhus/is-jxr), [`psd`](https://github.com/sindresorhus/is-psd), `false`\n\n*SVG isn't included as it requires the whole file to be read, but you can get it [here](https://github.com/sindresorhus/is-svg).*\n\n#### buffer\n\nType: `buffer` *(Node.js)*, `uint8array`\n\nIt only needs the first 12 bytes.\n\n\n## CLI\n\n```sh\n$ npm install --global image-type\n```\n\n```sh\n$ image-type --help\n\n  Usage\n    image-type <filename>\n    cat <filename> | image-type\n\n  Example\n    cat unicorn.png | image-type\n    png\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/image-type/issues"
  },
  "_id": "image-type@1.1.0",
  "dist": {
    "shasum": "bdca4839875c631e58931c206f1f770c02aa499f"
  },
  "_from": "image-type@^1.0.0",
  "_resolved": "https://registry.npmjs.org/image-type/-/image-type-1.1.0.tgz"
}
